def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    //buildToolsVersion '29.0.3'
    compileSdkVersion 29
    

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.XrWare.structar"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions{
        pickFirst 'android/unityLibrary/src/main/jniLibs/armeabi-v7a/libil2cpp.so'
        pickFirst 'android/unityLibrary/src/main/jniLibs/arm64-v8a/libil2cpp.so'

        pickFirst 'lib/armeabi-v7a/libil2cpp.so'
        pickFirst 'lib/arm64-v8a/libil2cpp.so'

        pickFirst 'lib/armeabi-v7a/libunity.so'
        pickFirst 'lib/arm64-v8a/libunity.so'
        
        pickFirst 'lib/arm64-v8a/libmain.so'
        pickFirst 'lib/armeabi-v7a/libmain.so'
    }
}

flutter {
    source '../..'
}


dependencies {
    implementation project(':unityLibrary')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation project(':arcore_client')
    implementation project(':unityandroidpermissions')
    implementation project(':UnityARCore')

}
